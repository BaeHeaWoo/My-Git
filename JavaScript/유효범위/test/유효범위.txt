-ㄴ-
 .ㅁ

1) 함수-유효범위
   유효범위(Scope)는 변수의 수명을 의미한다
-----------------------------------------------
var vscope = 'global';
function fscope(){
    alert(vscope);
}
fscope();
결과 global 


var vscope = 'global';
function fscope(){
	var vscope ='local';
	alert(vscope);
}
fscope();
결과 local  
이유는 fscope() 안에 vsocope 가 있다 그래서 가장 가까운 vsocope 출력
fscope() 안에 있는 변수는 지역변수  ->함수 안에서만 사용
fscope() 밖에 있는 변수 전역 -> 전 지역에서 접근
-----------------------------------------------
var vscope = 'global';
function fscope(){
	vscope ='local';
}
fscope();
alert(vscope);
결과는 local  var로 변수를 새로 정의 한게 아니라 기존에 있던 전역변수에 접근한것

-----------------------------------------------
for(var i = 0; i < 1; i++){
  
  var name = 'coding everybody';

}

alert(name);
결과  = coding everybody 이유는 javascript 에서는 for,if문에서 변수는 지역변수로 의미가 없어진다

function a(){

	for(var i = 0; i < 1; i++){

    		var name = 'coding everybody';
	
	}
	

}


alert(name)
-----------------------------------------------
자바스크립트는 함수가 선언된 시점에서의 유효범위를 갖는다. 
이러한 유효범위의 방식을 정적 유효범위(static scoping), 혹은 렉시컬(lexical scoping)이라고 한다. 
var i = 5;
 
function a(){
    var i = 10;
    b();
}
 
function b(){
    document.write(i);
}
 
a();
실행 결과는 5이다 이유는 b()라는 함수가 정의될때 사용되는 전역변수를 따르기 때문
+ 지역변수는 그 지역에서만 사용이 가능하다 
+ b()라는 함수를 호출했을때 b()는 어디에 사용되는지에 따라 변수에 접근이 가능하면  그건 동적
+ b()라는 함수가 정의되는 시점에 변수를 보면 결과 값이 항상 일정함 -> 정적